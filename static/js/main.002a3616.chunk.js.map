{"version":3,"sources":["components/Header/index.js","components/FriendCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","score","highscore","FriendCard","onClick","alt","name","src","image","Wrapper","children","App","state","friends","selected","shuffle","array","i","length","j","Math","floor","random","shuffledArray","_this","setState","updateScore","currentScore","id","employeeArray","includes","push","console","log","_this2","this","components_Wrapper","components_Header","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mlEA8BeA,MATf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,oBAAYH,EAAMK,MAAlB,kBAAwCL,EAAMM,mBCIrCC,MA1Bf,SAAoBP,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,QAASR,EAAMQ,SACnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,iBCA1BC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,kBCiG1BC,6MAvFbC,MAAQ,CACNC,UACAZ,MAAO,EACPC,UAAW,EACXY,SAAU,MAKZC,QAAU,SAAAC,GACR,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAgBP,EAAMC,GAC1BD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEbC,EAAKC,SAAS,CAAEZ,QAASG,OAI3BU,YAAc,WACZ,IAAIC,EAAeH,EAAKZ,MAAMX,MAAQ,EAClC0B,GAAgBH,EAAKZ,MAAMV,UAC7BsB,EAAKC,SAAS,CACZvB,UAAWyB,EACX1B,MAAO0B,IAITH,EAAKC,SAAS,CACZxB,MAAO0B,OAKbvB,QAAU,SAAAwB,GACRJ,EAAKT,QAAQS,EAAKZ,MAAMC,SAExB,IAAMgB,EAAgBL,EAAKZ,MAAME,SAE5Be,EAAcC,SAASjB,EAAQe,KAGlCC,EAAcE,KAAKlB,EAAQe,IAC3BJ,EAAKC,SAAS,CACZX,SAAUe,KAJZL,EAAKE,YAAYF,EAAKZ,MAAMe,aAAcH,EAAKZ,MAAMV,WAQvD8B,QAAQC,IAAIJ,4EAqBL,IAAAK,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,CAAQpC,MAAOkC,KAAKvB,MAAMX,MAAOC,UAAWiC,KAAKvB,MAAMV,YACtDiC,KAAKvB,MAAMC,QAAQyB,IAAI,SAAAC,GAAM,OAC5B1C,EAAAC,EAAAC,cAACyC,EAAD,CACEC,IAAKF,EAAOX,GACZA,GAAIW,EAAOX,GACXpB,MAAO+B,EAAO/B,MACdJ,QAAS8B,EAAK9B,oBAjFRsC,mBCPlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.002a3616.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\n// const styles = {\n//   headerStyle: {\n//     background: \"grey\"\n//   },\n//   headingStyle: {\n//     fontSize: 28\n//   }\n// };\n\n// We use JSX curly braces to evaluate the style object\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>clicky game!</h1>\n      <h2>score: {props.score} | high score: {props.highscore}</h2>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={props.onClick}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      {/* <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\n// removeFriend = id => {\n//   // Filter this.state.friends for friends with an id not equal to the id being removed\n//   const friends = this.state.friends.filter(friend => friend.id !== id);\n//   // Set this.state.friends equal to the new friends array\n//   this.setState({ friends });\n// };\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0,\n    selected: []\n\n    // lastClicked: null\n  };\n\n  shuffle = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var shuffledArray = array[i];\n      array[i] = array[j];\n      array[j] = shuffledArray;\n    }\n    this.setState({ friends: array });\n    // console.log(array);\n  };\n\n  updateScore = () => {\n    var currentScore = this.state.score + 1;\n    if (currentScore >= this.state.highscore) {\n      this.setState({\n        highscore: currentScore,\n        score: currentScore\n      })\n    }\n    else {\n      this.setState({\n        score: currentScore\n      })\n    }\n  }\n  \n  onClick = id => {\n    this.shuffle(this.state.friends);\n\n    const employeeArray = this.state.selected;\n\n    if (!employeeArray.includes(friends.id)) {\n      this.updateScore(this.state.currentScore, this.state.highscore)\n    } else {\n      employeeArray.push(friends.id)\n      this.setState({\n        selected: employeeArray\n        // currentScore: employeeArray.length\n      })\n    }\n    console.log(employeeArray)\n\n    // this.updateScore();\n\n\n\n    // console.log(\"click\");\n\n    // // const selected = this.state;\n\n    // if (id === this.state.friend) {\n    //   // this.state.selected.push(id),\n    //   this.setState({\n    //     shuffledArray: this.shuffle(this.state.friends),\n    //     score: this.state.score + 1\n    //   });\n    // }\n    // console.log(this.state.selected)\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore} />\n        {this.state.friends.map(friend =>\n          <FriendCard\n            key={friend.id}\n            id={friend.id}\n            image={friend.image}\n            onClick={this.onClick}\n          />\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}